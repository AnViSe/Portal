# Generated by Django 3.2.8 on 2021-10-29 06:44

import core.fields
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('code', core.fields.CodeField(unique=True)),
                ('name_adds', models.CharField(blank=True, max_length=10, null=True,
                                               verbose_name='Квартира')),
                ('name_adds_full', models.CharField(db_index=True, editable=False, max_length=255,
                                                    verbose_name='Полный адрес')),
                ('dt_cr', core.fields.CreateDateTimeField()),
                ('dt_up', core.fields.UpdateDateTimeField()),
                ('status', core.fields.StatusField()),
            ],
            options={
                'verbose_name': 'адрес',
                'verbose_name_plural': 'адреса',
                'db_table': 'ref_address',
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('code', core.fields.CodeField(unique=True)),
                ('name_cnt', models.CharField(db_index=True, max_length=100,
                                              verbose_name='Наименование')),
                ('alpha2', models.CharField(max_length=2, verbose_name='Код2')),
                ('alpha3', models.CharField(max_length=3, verbose_name='Код3')),
                ('dt_cr', core.fields.CreateDateTimeField()),
                ('dt_up', core.fields.UpdateDateTimeField()),
                ('status', core.fields.StatusField()),
            ],
            options={
                'verbose_name': 'страна',
                'verbose_name_plural': 'страны',
                'db_table': 'ref_country',
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('code', core.fields.CodeField(unique=True)),
                ('name_dst', models.CharField(db_index=True, max_length=60,
                                              verbose_name='Наименование')),
                ('dt_cr', core.fields.CreateDateTimeField()),
                ('dt_up', core.fields.UpdateDateTimeField()),
                ('status', core.fields.StatusField()),
            ],
            options={
                'verbose_name': 'район',
                'verbose_name_plural': 'районы',
                'db_table': 'ref_district',
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('tab_num', models.PositiveIntegerField(unique=True, verbose_name='Табельный')),
                ('dt_cr', core.fields.CreateDateTimeField()),
                ('dt_up', core.fields.UpdateDateTimeField()),
                ('status', core.fields.StatusField()),
            ],
            options={
                'verbose_name': 'сотрудник',
                'verbose_name_plural': 'сотрудники',
                'db_table': 'ref_employee',
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FlexObject',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False,
                                                   verbose_name='ID')),
                ('object_name', models.CharField(max_length=100, verbose_name='Наименование')),
                ('object_app', models.CharField(max_length=100, verbose_name='Приложение')),
                ('object_model', models.CharField(max_length=100, verbose_name='Модель')),
            ],
            options={
                'verbose_name': 'объект',
                'verbose_name_plural': 'объекты',
                'db_table': 'ref_object',
                'ordering': ['id'],
                'unique_together': {('object_app', 'object_model')},
            },
        ),
        migrations.CreateModel(
            name='FlexType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                           verbose_name='ID')),
                ('type_code', core.fields.CodeField()),
                ('type_name', models.CharField(max_length=100, verbose_name='Наименование')),
                ('type_name_full', models.CharField(blank=True, max_length=255, null=True,
                                                    verbose_name='Наименование полное')),
                ('type_desc', models.CharField(blank=True, max_length=255, null=True,
                                               verbose_name='Описание')),
                ('type_value', models.CharField(blank=True, max_length=15, null=True,
                                                verbose_name='Значение')),
                ('type_object', models.ForeignKey(blank=True, null=True,
                                                  on_delete=django.db.models.deletion.SET_NULL,
                                                  to='references.flexobject',
                                                  verbose_name='Имя модели')),
                ('status', core.fields.StatusField()),
            ],
            options={
                'verbose_name': 'тип',
                'verbose_name_plural': 'типы',
                'db_table': 'ref_type',
                'ordering': ['id'],
                'unique_together': {('type_object', 'type_code')},
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('code', core.fields.CodeField(unique=True)),
                ('soato', models.BigIntegerField(unique=True, verbose_name='СОАТО')),
                ('name_lct', models.CharField(max_length=100, verbose_name='Наименование')),
                ('name_lct_full', models.CharField(db_index=True, editable=False, max_length=150,
                                                   verbose_name='Наименование полное')),
                ('district', models.ForeignKey(blank=True, null=True,
                                               on_delete=django.db.models.deletion.SET_NULL,
                                               to='references.district', verbose_name='Район')),
                ('model_type', models.ForeignKey(blank=True, limit_choices_to={'type_object_id': 1},
                                                 null=True,
                                                 on_delete=django.db.models.deletion.SET_NULL,
                                                 to='references.flextype', verbose_name='Тип')),
                ('dt_cr', core.fields.CreateDateTimeField()),
                ('dt_up', core.fields.UpdateDateTimeField()),
                ('status', core.fields.StatusField()),
            ],
            options={
                'verbose_name': 'населенный пункт',
                'verbose_name_plural': 'населенные пункты',
                'db_table': 'ref_location',
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True,
                                                verbose_name='Имя')),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True,
                                                 verbose_name='Отчество')),
                ('name_lfm', models.CharField(db_index=True, editable=False, max_length=150,
                                              verbose_name='Фамилия И.О.')),
                ('name_fml', models.CharField(editable=False, max_length=150,
                                              verbose_name='И.О. Фамилия')),
                ('pers_num', models.CharField(blank=True, db_index=True, max_length=14, null=True,
                                              verbose_name='Личный номер')),
                ('birth_date', models.DateField(blank=True, null=True,
                                                verbose_name='Дата рождения')),
                ('gender', core.fields.GenderField()),
                ('dt_cr', core.fields.CreateDateTimeField()),
                ('dt_up', core.fields.UpdateDateTimeField()),
                ('status', core.fields.StatusField()),
            ],
            options={
                'verbose_name': 'персона',
                'verbose_name_plural': 'персоны',
                'db_table': 'ref_person',
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(db_index=True, max_length=15,
                                                  verbose_name='Номер телефона')),
                ('model_type', models.ForeignKey(blank=True, limit_choices_to={'type_object_id': 4},
                                                 null=True,
                                                 on_delete=django.db.models.deletion.SET_NULL,
                                                 to='references.flextype', verbose_name='Тип')),
                ('dt_cr', core.fields.CreateDateTimeField()),
                ('dt_up', core.fields.UpdateDateTimeField()),
                ('status', core.fields.StatusField()),
            ],
            options={
                'verbose_name': 'телефон',
                'verbose_name_plural': 'телефоны',
                'db_table': 'ref_phone',
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PostOffice',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True,
                                                      on_delete=django.db.models.deletion.SET_NULL,
                                                      related_name='children',
                                                      to='references.postoffice',
                                                      verbose_name='Родитель')),
                ('code', core.fields.CodeField(unique=True)),
                ('zipcode', models.DecimalField(decimal_places=0, max_digits=6, unique=True,
                                                verbose_name='Индекс')),
                ('name_post', models.CharField(max_length=100, verbose_name='Наименование')),
                ('schedule_post', models.CharField(blank=True, max_length=200, null=True,
                                                   verbose_name='График работы')),
                ('holiday_post', models.CharField(blank=True, max_length=50, null=True,
                                                  verbose_name='Выходные дни')),
                ('address', models.ForeignKey(blank=True, null=True,
                                              on_delete=django.db.models.deletion.SET_NULL,
                                              to='references.address', verbose_name='Адрес')),
                ('model_type', models.ForeignKey(blank=True, limit_choices_to={'type_object_id': 7},
                                                 null=True,
                                                 on_delete=django.db.models.deletion.SET_NULL,
                                                 to='references.flextype', verbose_name='Тип')),
                ('dt_cr', core.fields.CreateDateTimeField()),
                ('dt_up', core.fields.UpdateDateTimeField()),
                ('status', core.fields.StatusField()),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
            ],
            options={
                'verbose_name': 'почтовое отделение',
                'verbose_name_plural': 'почтовые отделения',
                'db_table': 'ref_post_office',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subdivision',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True,
                                                      on_delete=django.db.models.deletion.SET_NULL,
                                                      related_name='children',
                                                      to='references.subdivision',
                                                      verbose_name='Родитель')),
                ('code', core.fields.CodeField(unique=True)),
                ('name_sd', models.CharField(db_index=True, max_length=50,
                                             verbose_name='Наименование')),
                ('name_sd_full', models.CharField(blank=True, max_length=255, null=True,
                                                  verbose_name='Наименование полное')),
                ('model_type', models.ForeignKey(blank=True, limit_choices_to={'type_object_id': 5},
                                                 null=True,
                                                 on_delete=django.db.models.deletion.SET_NULL,
                                                 to='references.flextype', verbose_name='Тип')),
                ('location', models.ForeignKey(blank=True, null=True,
                                               on_delete=django.db.models.deletion.SET_NULL,
                                               to='references.location',
                                               verbose_name='Населенный пункт')),
                ('chief', models.ForeignKey(blank=True, null=True,
                                            on_delete=django.db.models.deletion.SET_NULL,
                                            related_name='chief', to='references.employee',
                                            verbose_name='Руководитель')),
                ('sub_chief', models.ForeignKey(blank=True, null=True,
                                                on_delete=django.db.models.deletion.SET_NULL,
                                                related_name='sub_chief', to='references.employee',
                                                verbose_name='Заместитель руководителя')),
                ('booker', models.ForeignKey(blank=True, null=True,
                                             on_delete=django.db.models.deletion.SET_NULL,
                                             related_name='booker', to='references.employee',
                                             verbose_name='Бухгалтер')),
                ('notice_type', models.ForeignKey(blank=True,
                                                  limit_choices_to={'type_object_id': 6}, null=True,
                                                  on_delete=django.db.models.deletion.SET_NULL,
                                                  related_name='notice_type',
                                                  to='references.flextype',
                                                  verbose_name='Тип генерации извещений')),
                ('code_ext', models.CharField(blank=True, max_length=15, null=True,
                                              verbose_name='Внешний код')),
                ('dt_cr', core.fields.CreateDateTimeField()),
                ('dt_up', core.fields.UpdateDateTimeField()),
                ('status', core.fields.StatusField()),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
            ],
            options={
                'verbose_name': 'подразделение',
                'verbose_name_plural': 'подразделения',
                'db_table': 'ref_subdivision',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Street',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('code', core.fields.CodeField(unique=True)),
                ('name_str', models.CharField(max_length=100, verbose_name='Наименование')),
                ('name_str_full', models.CharField(db_index=True, editable=False, max_length=150,
                                                   verbose_name='Наименование полное')),
                ('model_type', models.ForeignKey(blank=True, limit_choices_to={'type_object_id': 2},
                                                 null=True,
                                                 on_delete=django.db.models.deletion.SET_NULL,
                                                 to='references.flextype', verbose_name='Тип')),
                ('dt_cr', core.fields.CreateDateTimeField()),
                ('dt_up', core.fields.UpdateDateTimeField()),
                ('status', core.fields.StatusField()),
            ],
            options={
                'verbose_name': 'улица',
                'verbose_name_plural': 'улицы',
                'db_table': 'ref_street',
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('code', core.fields.CodeField(unique=True)),
                ('name_rgn', models.CharField(db_index=True, max_length=60,
                                              verbose_name='Наименование')),
                ('country', models.ForeignKey(blank=True, null=True,
                                              on_delete=django.db.models.deletion.SET_NULL,
                                              to='references.country', verbose_name='Страна')),
                ('dt_cr', core.fields.CreateDateTimeField()),
                ('dt_up', core.fields.UpdateDateTimeField()),
                ('status', core.fields.StatusField()),
            ],
            options={
                'verbose_name': 'область',
                'verbose_name_plural': 'области',
                'db_table': 'ref_region',
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PostPhones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                           verbose_name='ID')),
                ('post_office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                                  to='references.postoffice',
                                                  verbose_name='Почтовое отделение')),
                ('phone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                            to='references.phone', verbose_name='Телефон')),
                ('phone_type', models.ForeignKey(blank=True, limit_choices_to={'type_object_id': 4},
                                                 null=True,
                                                 on_delete=django.db.models.deletion.SET_NULL,
                                                 to='references.flextype', verbose_name='Тип')),
                ('phone_desc', models.CharField(blank=True, max_length=100, null=True,
                                                verbose_name='Примечание')),
                ('status', core.fields.StatusField()),
            ],
            options={
                'verbose_name': 'Телефон отделения',
                'verbose_name_plural': 'Телефоны отделения',
                'db_table': 'ref_post_phones',
            },
        ),
        migrations.AddField(
            model_name='postoffice',
            name='phones',
            field=models.ManyToManyField(related_name='post_offices',
                                         through='references.PostPhones', to='references.Phone',
                                         verbose_name='Телефоны'),
        ),
        migrations.CreateModel(
            name='PersonPhones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                           verbose_name='ID')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                             to='references.person', verbose_name='Персона')),
                ('phone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                            to='references.phone', verbose_name='Телефон')),
                ('phone_type', models.ForeignKey(blank=True, limit_choices_to={'type_object_id': 4},
                                                 null=True,
                                                 on_delete=django.db.models.deletion.SET_NULL,
                                                 to='references.flextype', verbose_name='Тип')),
                ('phone_desc', models.CharField(blank=True, max_length=100, null=True,
                                                verbose_name='Примечание')),
                ('status', core.fields.StatusField()),
            ],
            options={
                'verbose_name': 'Телефон персоны',
                'verbose_name_plural': 'Телефоны персоны',
                'db_table': 'ref_person_phones',
            },
        ),
        migrations.CreateModel(
            name='PersonAddresses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                           verbose_name='ID')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                             to='references.person', verbose_name='Персона')),

                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                              to='references.address', verbose_name='Адрес')),
                ('address_type', models.ForeignKey(blank=True,
                                                   limit_choices_to={'type_object_id': 3},
                                                   null=True,
                                                   on_delete=django.db.models.deletion.SET_NULL,
                                                   to='references.flextype', verbose_name='Тип')),
                ('address_desc', models.CharField(blank=True, max_length=100, null=True,
                                                  verbose_name='Примечание')),
                ('status', core.fields.StatusField()),
            ],
            options={
                'verbose_name': 'Адрес персоны',
                'verbose_name_plural': 'Адреса персоны',
                'db_table': 'ref_person_addresses',
            },
        ),
        migrations.AddField(
            model_name='person',
            name='addresses',
            field=models.ManyToManyField(related_name='persons',
                                         through='references.PersonAddresses',
                                         to='references.Address', verbose_name='Адреса'),
        ),
        migrations.AddField(
            model_name='person',
            name='phones',
            field=models.ManyToManyField(related_name='persons', through='references.PersonPhones',
                                         to='references.Phone', verbose_name='Телефоны'),
        ),
        migrations.CreateModel(
            name='LocationStreets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                           verbose_name='ID')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                               to='references.location',
                                               verbose_name='Населенный пункт')),
                ('street', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                             to='references.street', verbose_name='Улица')),
            ],
            options={
                'verbose_name': 'Улица населенного пункта',
                'verbose_name_plural': 'Улицы населенных пунктов',
                'db_table': 'ref_location_streets',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='location',
            name='streets',
            field=models.ManyToManyField(related_name='streets',
                                         through='references.LocationStreets',
                                         to='references.Street', verbose_name='Улицы'),
        ),
        migrations.AddField(
            model_name='employee',
            name='person',
            field=models.ForeignKey(blank=True, null=True,
                                    on_delete=django.db.models.deletion.SET_NULL,
                                    to='references.person', verbose_name='Персона'),
        ),
        migrations.AddField(
            model_name='employee',
            name='subdivision',
            field=models.ForeignKey(blank=True, null=True,
                                    on_delete=django.db.models.deletion.SET_NULL,
                                    to='references.subdivision', verbose_name='Подразделение'),
        ),
        migrations.AddField(
            model_name='district',
            name='region',
            field=models.ForeignKey(blank=True, null=True,
                                    on_delete=django.db.models.deletion.SET_NULL,
                                    to='references.region', verbose_name='Область'),
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('code', core.fields.CodeField(unique=True)),
                ('name_bld', models.CharField(max_length=10, verbose_name='Здание')),
                ('name_bld_full', models.CharField(db_index=True, editable=False, max_length=200,
                                                   verbose_name='Полный адрес здания')),
                ('location', models.ForeignKey(blank=True, null=True,
                                               on_delete=django.db.models.deletion.SET_NULL,
                                               to='references.location',
                                               verbose_name='Населенный пункт')),
                ('street', models.ForeignKey(blank=True, null=True,
                                             on_delete=django.db.models.deletion.SET_NULL,
                                             to='references.street', verbose_name='Улица')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9,
                                                 null=True, verbose_name='Широта')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9,
                                                  null=True, verbose_name='Долгота')),
                ('dt_cr', core.fields.CreateDateTimeField()),
                ('dt_up', core.fields.UpdateDateTimeField()),
                ('status', core.fields.StatusField()),
            ],
            options={
                'verbose_name': 'здание',
                'verbose_name_plural': 'здания',
                'db_table': 'ref_building',
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='address',
            name='building',
            field=models.ForeignKey(blank=True, null=True,
                                    on_delete=django.db.models.deletion.SET_NULL,
                                    to='references.building', verbose_name='Здание'),
        ),
    ]
